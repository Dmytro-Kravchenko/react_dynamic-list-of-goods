{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","goods","map","id","color","name","style","getAll","fetch","then","response","ok","headers","get","includes","json","Promise","reject","Error","status","statusText","App","useState","setGoods","handleSetGoods","respounce","data","className","type","onClick","sort","a","b","localeCompare","slice","filter","good","ReactDOM","render","document","getElementById"],"mappings":"wMAOaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,6BACGA,EAAMC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAd,OACT,oBAEE,UAAQ,OACRC,MAAO,CAAEF,SAHX,SAKGC,GAJIF,SCaAI,EAAS,WACpB,OAnBOC,MAHI,yEAIRC,MAAK,SAAAC,GAAa,IAAD,EAChB,OAAKA,EAASC,GAMV,UAACD,EAASE,QAAQC,IAAI,uBAAtB,OAAC,EAAsCC,SAAS,oBAM7CJ,EAASK,OALPC,QAAQC,OACbC,MAAM,kCAPDF,QAAQC,OACbC,MAAM,GAAD,OAAIR,EAASS,OAAb,cAAyBT,EAASU,kBCJpCC,EAAgB,WAC3B,MAA0BC,mBAAiB,IAA3C,mBAAOrB,EAAP,KAAcsB,EAAd,KAEMC,EAAiB,SAACC,GACtBA,EAAUhB,MAAK,SAAAiB,GAAI,OAAIH,EAASG,OAGlC,OACE,sBAAKC,UAAU,MAAf,UACE,uDAEA,wBACEC,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAML,EAAejB,MAHhC,4BAQA,wBACEqB,KAAK,SACL,UAAQ,oBACRC,QAAS,kBAAML,EDCdjB,IACJE,MAAK,SAAAR,GAAK,OAAIA,EAAM6B,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAE1B,KAAK4B,cAAcD,EAAE3B,SACxD6B,MAAM,EAAG,QCNV,gCAQA,wBACEN,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAML,EDDdjB,IACJE,MAAK,SAAAR,GAAK,OAAIA,EAAMkC,QAAO,SAAAC,GAAI,MAAmB,QAAfA,EAAKhC,cCHvC,4BAQA,cAAC,EAAD,CAAWH,MAAOA,QCtCxBoC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.4b6c56dd.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(({ id, color, name }) => (\n      <li\n        key={id}\n        data-cy=\"good\"\n        style={{ color }}\n      >\n        {name}\n      </li>\n    ))}\n  </ul>\n);\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nconst request = (url: string): Promise<Good[]> => {\n  return fetch(url)\n    .then(response => {\n      if (!response.ok) {\n        return Promise.reject(\n          Error(`${response.status} - ${response.statusText}`),\n        );\n      }\n\n      if (!response.headers.get('content-type')?.includes('application/json')) {\n        return Promise.reject(\n          Error('Content-type is not supported'),\n        );\n      }\n\n      return response.json();\n    });\n};\n\nexport const getAll = () => {\n  return request(API_URL);\n};\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => goods.sort((a, b) => a.name.localeCompare(b.name))\n      .slice(0, 5));\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => goods.filter(good => good.color === 'red'));\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\nimport { Good } from './types/Good';\nimport { getAll, get5First, getRedGoods } from './api/goods';\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n\n  const handleSetGoods = (respounce: Promise<Good[]>) => {\n    respounce.then(data => setGoods(data));\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        data-cy=\"all-button\"\n        onClick={() => handleSetGoods(getAll())}\n      >\n        Load all goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        onClick={() => handleSetGoods(get5First())}\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"red-button\"\n        onClick={() => handleSetGoods(getRedGoods())}\n      >\n        Load red goods\n      </button>\n\n      <GoodsList goods={goods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}